{"version":3,"file":"component---src-pages-index-js-77bf916097a2781e1ca4.js","mappings":"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","sources":["webpack://duneshenko/./src/components/works/Autoplayer.js","webpack://duneshenko/./src/utils.js","webpack://duneshenko/./src/components/works/Video.js","webpack://duneshenko/./src/components/works/Card.js","webpack://duneshenko/./src/components/works/Card.module.css","webpack://duneshenko/./src/components/works/Works.js","webpack://duneshenko/./src/components/works/Works.module.css","webpack://duneshenko/./src/pages/index.js"],"sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useState } from \"react\"\n\nimport { keyToCmp } from \"../../utils\"\n\nconst AutoplayerContext = createContext({\n  currentElement: null,\n  watchElement: (element) => {},\n  unwatchElement: (element) => {},\n})\n\nexport const Autoplayer = ({ children }) => {\n  const [watchedElements, setWatchedElements] = useState([])\n  const [currentElement, setCurrentElement] = useState(null)\n\n  const watchElement = useCallback((element) => {\n    setWatchedElements((watchedElements) => [...watchedElements, element])\n  }, [setWatchedElements])\n\n  const unwatchElement = useCallback((element) => {\n    setWatchedElements((watchedElements) => watchedElements.filter((item) => item !== element))\n  }, [setWatchedElements])\n\n  useEffect(() => {\n    const onScroll = () => {\n      setCurrentElement(\n        [...watchedElements]\n          .sort(keyToCmp((element) => element.getBoundingClientRect().top, true))\n          .find((element) => {\n            const rect = element.getBoundingClientRect()\n            return rect.top < window.innerHeight / 2 && rect.bottom > 0\n          })\n      )\n    }\n\n    window.addEventListener(\"scroll\", onScroll)\n\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll)\n    }\n  }, [watchedElements, setCurrentElement])\n\n  return (\n    <AutoplayerContext.Provider value={{ currentElement, watchElement, unwatchElement }}>\n      {children}\n    </AutoplayerContext.Provider>\n  )\n}\n\nexport const useAutoplay = (element) => {\n  const { currentElement, watchElement, unwatchElement } = useContext(AutoplayerContext)\n\n  useEffect(() => {\n    if (!element) return\n\n    watchElement(element)\n\n    return () => {\n      unwatchElement(element)\n    }\n  }, [element, watchElement, unwatchElement])\n\n  return element === currentElement\n}\n\nexport default Autoplayer\n","export const keyToCmp = (key, reverse = false, nullsLast = false) => {\n  return (obj1, obj2) => {\n    let value1 = key(obj1)\n    let value2 = key(obj2)\n\n    if (value1 === value2) return 0\n\n    if (reverse) {\n      [value1, value2] = [value2, value1]\n    }\n\n    if (value1 === null || value1 === undefined) {\n      return nullsLast ? 1 : -1\n    }\n\n    if (value2 === null || value2 === undefined) {\n      return nullsLast ? -1 : 1\n    }\n\n    return value1 > value2 ? 1 : -1\n  }\n}\n","import React from \"react\"\n\nconst Video = ({ className, videos }) => {\n  return (\n    <div className={className}>\n      <video autoPlay loop muted playsInline>\n        {videos.map((video) => (\n          <source key={video.src} src={video.src} type={video.type} />\n        ))}\n      </video>\n    </div>\n  )\n}\n\nexport default Video\n","import React, { useRef } from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport classNames from \"classnames\"\n\nimport { useAutoplay } from \"./Autoplayer\"\nimport Video from \"./Video\"\nimport * as styles from \"./Card.module.css\"\n\nconst Card = ({ work }) => {\n  const image = getImage(work.image)\n  const videos = work.video.map((video) => ({\n    src: video.src.publicURL,\n    type: video.type\n  }))\n\n  const ref = useRef()\n  const autoplay = useAutoplay(ref.current)\n\n  return (\n    <div>\n      <div className={styles.title}>{work.name} '{work.type}'</div>\n      <Link to={`/${work.slug}/`} className={styles.link} ref={ref}>\n        <Video videos={videos} className={classNames(styles.video, {[styles.autoplay]: autoplay})} />\n        <GatsbyImage image={image} alt={work.name} className={styles.image} />\n      </Link>\n    </div>\n  )\n}\n\nexport default Card\n","// extracted by mini-css-extract-plugin\nexport var autoplay = \"Card-module--autoplay--Ma2Fx\";\nexport var image = \"Card-module--image--Cwc6E\";\nexport var link = \"Card-module--link--aINjk\";\nexport var title = \"Card-module--title--riOCF\";\nexport var video = \"Card-module--video--vz6JT\";","import React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport classNames from \"classnames\"\n\nimport { useFirstMount } from \"../../contexts/FirstMountContext\"\nimport Card from \"./Card\"\nimport Autoplayer from \"./Autoplayer\"\nimport * as styles from \"./Works.module.css\"\n\nconst Works = () => {\n  const isFirstMount = useFirstMount(\"Works\")\n\n  const data = useStaticQuery(graphql`\n    query {\n      allWork {\n        nodes {\n          id\n          slug\n          name\n          type\n          image {\n            childImageSharp {\n              gatsbyImageData(\n                width: 2000\n              )\n            }\n          }\n          video {\n            src {\n              publicURL\n            }\n            type\n          }\n        }\n      }\n    }\n  `)\n\n  const works = []\n\n  for (const work of data.allWork.nodes) {\n    works[work.slug] = work\n  }\n\n  return (\n    <Autoplayer>\n      <div className={classNames(styles.cards, {\"appear-bottom\": isFirstMount})}>\n        <div className={styles.card2}><Card work={works[\"in-the-dark\"]} /></div>\n        <div className={styles.card1}><Card work={works[\"feel\"]} /></div>\n        <div className={styles.card3}><Card work={works[\"game\"]} /></div>\n        <div className={styles.card4}><Card work={works[\"yandex-lavka\"]} /></div>\n        <div className={styles.card5}><Card work={works[\"antonio-banderas-perfume\"]} /></div>\n        <div className={styles.card6}><Card work={works[\"youth\"]} /></div>\n      </div>\n    </Autoplayer>\n  )\n}\n\nexport default Works\n","// extracted by mini-css-extract-plugin\nexport var card1 = \"Works-module--card1--1EUX7\";\nexport var card2 = \"Works-module--card2--x3dUw\";\nexport var card3 = \"Works-module--card3--PxNtP\";\nexport var card4 = \"Works-module--card4--buMjV\";\nexport var card5 = \"Works-module--card5--3Iyy9\";\nexport var card6 = \"Works-module--card6--Fv3EN\";\nexport var cards = \"Works-module--cards---b20j\";","import React from \"react\"\n\nimport Seo from \"../components/Seo\"\nimport Layout from \"../components/layout/Layout\"\nimport Works from \"../components/works/Works\"\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Seo />\n      <Works />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["AutoplayerContext","createContext","currentElement","watchElement","element","unwatchElement","children","useState","watchedElements","setWatchedElements","setCurrentElement","useCallback","filter","item","useEffect","onScroll","key","reverse","nullsLast","sort","getBoundingClientRect","top","obj1","obj2","value1","value2","find","rect","window","innerHeight","bottom","addEventListener","removeEventListener","Provider","value","className","videos","autoPlay","loop","muted","playsInline","map","video","src","type","work","image","getImage","publicURL","ref","useRef","autoplay","current","useContext","name","to","slug","classNames","G","alt","isFirstMount","useFirstMount","works","useStaticQuery","allWork","nodes","Layout","Seo"],"sourceRoot":""}